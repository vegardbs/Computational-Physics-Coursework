#include <iostream>
#include <armadillo>
#include <math.h>
#include <time.h>
#include <fstream>

using namespace arma;
using namespace std;

int main()
{
    double D = 1;
    int n = 50;
    ofstream data1,data2,data3;
    double dt = 5e-5;
    int tsteps = 100000;
    double xsteps = 1/double(n);
    double a = dt/(D*xsteps*xsteps);

     mat U = zeros<mat>(n,n);

     // Initial conditions
     for (int j=0 ; j < n ; j++){
         U(0,j)=1;
     }

     for (int t=1 ; t < tsteps ; t++){

         for (int j=0 ; j < n ; j++){
         for (int i=0 ; i < n ; i++){
             if(i==0)          { U(i,j) = 1; } // Boundary conditions
             else if(j==0)     { U(i,j) = 0; }
             else if(i==(n-1)) { U(i,j) = 0; }
             else if(j==(n-1)) { U(i,j) = 0; }
             else              { U(i,j) = U(i,j)+a*( U(i+1,j) + U(i-1,j) + U(i,j+1) + U(i,j-1) - 4*U(i,j) ); }
         }}

     }

        data1.open("data1");
        data1 << U << endl;
        data1.close();

}


